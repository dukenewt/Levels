# Uncomment this line to define a global platform for your project
platform :ios, '14.0'

# Enable parallel builds
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

# Add gRPC compiler flags
ENV['GRPC_CFSTREAM'] = '1'

install! 'cocoapods', :deterministic_uuids => false

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get is executed first"
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Generated.xcconfig, then run flutter pub get"
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

flutter_ios_podfile_setup

target 'Runner' do
  use_frameworks!
  use_modular_headers!

  # Specify exact versions for gRPC
  pod 'gRPC-Core', '1.62.0'
  pod 'gRPC-C++', '1.62.0'
  
  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
  target 'RunnerTests' do
    inherit! :search_paths
  end
end

post_install do |installer|
  # Enable concurrent builds
  installer.pods_project.build_configurations.each do |config|
    config.build_settings['ENABLE_BITCODE'] = 'NO'
    config.build_settings['SWIFT_VERSION'] = '5.0'
    config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '14.0'
    # Speed up build time
    config.build_settings['GCC_OPTIMIZATION_LEVEL'] = '0'
    config.build_settings['SWIFT_OPTIMIZATION_LEVEL'] = '-Onone'
    # Add C++ standard library setting
    config.build_settings['CLANG_CXX_LIBRARY'] = 'libc++'
    config.build_settings['CLANG_CXX_LANGUAGE_STANDARD'] = 'c++17'
    config.build_settings['SWIFT_COMPILATION_MODE'] = 'singlefile'
    config.build_settings['CLANG_ENABLE_MODULES'] = 'YES'
    # Add additional compiler flags for gRPC
    config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] ||= ['$(inherited)']
    config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << 'GRPC_CFSTREAM=1'
    config.build_settings['OTHER_CFLAGS'] = '$(inherited) -Wno-comma -Wno-shorten-64-to-32 -Wno-conditional-uninitialized -Wno-deprecated-declarations -Wno-semicolon-before-method-body -Wno-unused-variable -Wno-format -Wno-missing-field-initializers -Wno-sign-compare -Wno-quoted-include-in-framework-header'
    # Add new build system settings
    config.build_settings['BUILD_LIBRARY_FOR_DISTRIBUTION'] = 'YES'
    config.build_settings['ENABLE_USER_SCRIPT_SANDBOXING'] = 'NO'
  end

  installer.pods_project.targets.each do |target|
    flutter_additional_ios_build_settings(target)
    
    # Add BoringSSL-GRPC compiler flags fix
    if target.name == 'BoringSSL-GRPC'
      target.source_build_phase.files.each do |file|
        if file.settings && file.settings['COMPILER_FLAGS']
          flags = file.settings['COMPILER_FLAGS'].split
          flags.reject! { |flag| flag == '-GCC_WARN_INHIBIT_ALL_WARNINGS' }
          file.settings['COMPILER_FLAGS'] = flags.join(' ')
        end
      end
    end
    
    target.build_configurations.each do |config|
      # Remove Embed Swift Standard Libraries Settings
      config.build_settings['EMBEDDED_CONTENT_CONTAINS_SWIFT'] = 'NO'
      config.build_settings['ALWAYS_EMBED_SWIFT_STANDARD_LIBRARIES'] = 'NO'
      
      # Enable Dead Code Stripping
      config.build_settings['DEAD_CODE_STRIPPING'] = 'YES'
      
      # C++ specific settings for gRPC
      config.build_settings['CLANG_CXX_LANGUAGE_STANDARD'] = 'c++17'
      config.build_settings['CLANG_CXX_LIBRARY'] = 'libc++'
      
      # Additional compiler flags for gRPC template issues
      config.build_settings['OTHER_CPLUSPLUSFLAGS'] = '$(inherited) -std=c++17 -fno-strict-aliasing'
      config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] ||= ['$(inherited)', 'GPR_APPLE=1']
      
      # Architecture settings
      config.build_settings['VALID_ARCHS'] = 'arm64 x86_64'
      config.build_settings['EXCLUDED_ARCHS[sdk=iphonesimulator*]'] = ''
      
      # Additional settings
      config.build_settings['BUILD_LIBRARY_FOR_DISTRIBUTION'] = 'YES'
      config.build_settings['ENABLE_BITCODE'] = 'NO'
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '14.0'
      config.build_settings['ENABLE_USER_SCRIPT_SANDBOXING'] = 'NO'
      
      # Warning settings
      config.build_settings['CLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER'] = 'YES'
      config.build_settings['GCC_WARN_INHIBIT_ALL_WARNINGS'] = 'YES' # Temporarily suppress warnings
    end
  end
end
